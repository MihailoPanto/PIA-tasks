{"ast":null,"code":"import { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponentComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = new User();\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  login() {\n    if (!this.username || !this.password || !this.type) {\n      this.errorMsg1 = \"Niste uneli sve potrebne podatke!\";\n      return;\n    }\n    this.user.username = this.username;\n    this.user.password = this.password;\n    this.user.type = this.type;\n    this.userService.login(this.user).subscribe(data => {\n      if (!data) {\n        this.errorMsg1 = \"Niste uneli ispravne podatke!\";\n        return;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponentComponent_Factory(t) {\n    return new (t || LoginComponentComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponentComponent,\n    selectors: [[\"app-login-component\"]],\n    decls: 26,\n    vars: 7,\n    consts: [[\"name\", \"loginForm\"], [\"type\", \"text\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"name\", \"\", \"id\", \"\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"value\", \"kupac\"], [\"value\", \"prodavac\"], [3, \"click\"], [2, \"color\", \"red\"]],\n    template: function LoginComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\")(2, \"tr\")(3, \"td\");\n        i0.ɵɵtext(4, \"Korisnicko ime: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"td\")(6, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponentComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"tr\")(8, \"td\");\n        i0.ɵɵtext(9, \"Lozinka: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"td\")(11, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponentComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"tr\")(13, \"td\");\n        i0.ɵɵtext(14, \"Tip: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"td\")(16, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponentComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.type = $event;\n        });\n        i0.ɵɵelementStart(17, \"option\", 3);\n        i0.ɵɵtext(18, \"Kupac\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 4);\n        i0.ɵɵtext(20, \"Prodavac\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"tr\")(22, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponentComponent_Template_button_click_22_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(23, \"Uloguj se\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"span\", 6);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.username);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.password);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.type);\n        i0.ɵɵproperty(\"ngModel\", ctx.type);\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", ctx.errorMsg1, \" \");\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["User","LoginComponentComponent","constructor","userService","user","ngOnInit","Error","login","username","password","type","errorMsg1","subscribe","data","_","i0","ɵɵdirectiveInject","i1","UserService","_2","selectors","decls","vars","consts","template","LoginComponentComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponentComponent_Template_input_ngModelChange_6_listener","$event","LoginComponentComponent_Template_input_ngModelChange_11_listener","LoginComponentComponent_Template_select_ngModelChange_16_listener","LoginComponentComponent_Template_button_click_22_listener","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\2021\\frontend\\src\\app\\login-component\\login-component.component.ts","C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\2021\\frontend\\src\\app\\login-component\\login-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent implements OnInit{\n\n  constructor(private userService: UserService){}\n\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  username: string;\n  password: string;\n  type: string;\n  errorMsg1: string;\n\n  user: User = new User();\n\n  login(){\n    if(!this.username || !this.password || !this.type){\n      this.errorMsg1 = \"Niste uneli sve potrebne podatke!\";\n      return;\n    }\n    this.user.username = this.username;\n    this.user.password = this.password;\n    this.user.type = this.type;\n    this.userService.login(this.user).subscribe(\n      data=>{\n        if(!data){\n          this.errorMsg1 = \"Niste uneli ispravne podatke!\";\n          return;\n        }\n      }\n    )\n  }\n\n}\n","<form name=\"loginForm\">\n    <table>\n        <tr>\n            <td>Korisnicko ime: </td>\n            <td><input type=\"text\" [(ngModel)]=\"username\" value={{username}}></td>\n        </tr>\n        <tr>\n            <td>Lozinka: </td>\n            <td><input type=\"text\" [(ngModel)]=\"password\" value={{password}}></td>\n        </tr>\n        <tr>\n            <td>Tip: </td>\n            <td>    <select name=\"\" id=\"\" [(ngModel)]=\"type\" value={{type}}>\n                <option value=\"kupac\">Kupac</option>\n                <option value=\"prodavac\">Prodavac</option>\n            </select></td>\n        </tr>\n        <tr>\n            <button (click)=\"login()\">Uloguj se</button>\n        </tr>\n    </table>\n\n    <span style=\"color: red;\">\n        {{errorMsg1}}\n    </span>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}