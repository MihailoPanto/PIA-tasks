{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  // backendUrl = \"*\"\n  login(u) {\n    return this.http.post(`${this.backendUrl}/user/login/`, u);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","login","u","post","backendUrl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\K1-2020-1\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n\n  // backendUrl = \"*\"\n\n  login(u: User){\n    return this.http.post<User>(`${this.backendUrl}/user/login/`,u);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAGxC;EAEAC,KAAKA,CAACC,CAAO;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACC,UAAU,cAAc,EAACF,CAAC,CAAC;EACjE;EAAC,QAAAG,CAAA,G;qBATUP,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXZ,WAAW;IAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}