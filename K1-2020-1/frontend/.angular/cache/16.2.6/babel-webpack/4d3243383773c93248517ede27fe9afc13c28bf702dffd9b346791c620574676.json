{"ast":null,"code":"import { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.user = new User();\n    this.errorMsg = \"\";\n  }\n  login() {\n    alert(this.user.type);\n    this.userService.login(this.user).subscribe(data => {\n      if (!data) {\n        this.errorMsg = \"Nepostojeci korisnik!\";\n        return;\n      }\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      this.user = data;\n      if (data.type == \"kupac\") {\n        this.router.navigate([\"customer\"]);\n      } else {\n        this.router.navigate([\"worker\"]);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\", \"id\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"kupac\"], [\"value\", \"prodavac\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Dobrodosli na login stranicu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\nKorisnicko ime:\\n\");\n        i0.ɵɵelementStart(3, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵtext(5, \"\\nLozinka:\\n\");\n        i0.ɵɵelementStart(6, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵtext(8, \"\\nTip:\\n\");\n        i0.ɵɵelementStart(9, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_select_ngModelChange_9_listener($event) {\n          return ctx.user.type = $event;\n        });\n        i0.ɵɵelementStart(10, \"option\", 3);\n        i0.ɵɵtext(11, \"Kupac\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 4);\n        i0.ɵɵtext(13, \"Prodavac\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(16, \"Uloguj se\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.type);\n      }\n    },\n    dependencies: [i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["User","LoginComponent","constructor","userService","router","user","errorMsg","login","alert","type","subscribe","data","localStorage","setItem","JSON","stringify","navigate","_","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_3_listener","$event","username","ɵɵelement","LoginComponent_Template_input_ngModelChange_6_listener","password","LoginComponent_Template_select_ngModelChange_9_listener","LoginComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\K1-2020-1\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\K1-2020-1\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private userService:UserService,private router:Router){}\n\n  user: User=new User()\n  errorMsg:string=\"\"\n\n  login(){\n    alert(this.user.type)\n    this.userService.login(this.user).subscribe(\n      data=>{\n        if(!data){\n          this.errorMsg=\"Nepostojeci korisnik!\"\n          return\n        }\n        localStorage.setItem(\"user\",JSON.stringify(data))\n        this.user=data\n        if(data.type==\"kupac\"){\n          this.router.navigate([\"customer\"])\n        }else{\n          this.router.navigate([\"worker\"])\n        }\n      }\n    )\n  }\n\n}\n","<h3>Dobrodosli na login stranicu</h3>\nKorisnicko ime:\n<input type=\"text\" [(ngModel)]=\"user.username\">\n<br>\nLozinka:\n<input type=\"password\" [(ngModel)]=\"user.password\">\n<br>\nTip:\n<select name=\"\" id=\"\" [(ngModel)]=\"user.type\">\n    <option value=\"kupac\">Kupac</option>\n    <option value=\"prodavac\">Prodavac</option>\n</select>\n<br>\n<button (click)=\"login()\">Uloguj se</button>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}