{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let WorkerComponent = class WorkerComponent {\n  constructor(commentService, router) {\n    this.commentService = commentService;\n    this.router = router;\n    this.user = new User();\n    this.comments = [];\n  }\n  ngOnInit() {\n    let y = localStorage.getItem(\"user\");\n    if (y) {\n      this.user = JSON.parse(y);\n    }\n    this.getAllComments();\n  }\n  logout() {\n    this.router.navigate([\"\"]);\n  }\n  getAllComments() {\n    this.commentService.getAll().subscribe(data => {\n      if (data) {\n        this.comments = data;\n      }\n    });\n  }\n};\nWorkerComponent = __decorate([Component({\n  selector: 'app-worker',\n  templateUrl: './worker.component.html',\n  styleUrls: ['./worker.component.css']\n})], WorkerComponent);","map":{"version":3,"names":["Component","User","WorkerComponent","constructor","commentService","router","user","comments","ngOnInit","y","localStorage","getItem","JSON","parse","getAllComments","logout","navigate","getAll","subscribe","data","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\K1-2021-2\\frontend\\src\\app\\worker\\worker.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommentService } from '../services/comment.service';\nimport { User } from '../models/User';\nimport { Comment } from '../models/Comment';\n\n@Component({\n  selector: 'app-worker',\n  templateUrl: './worker.component.html',\n  styleUrls: ['./worker.component.css']\n})\nexport class WorkerComponent implements OnInit{\n  constructor(private commentService: CommentService, private router: Router){}\n  ngOnInit(): void {\n    let y = localStorage.getItem(\"user\")\n    if(y){\n      this.user=JSON.parse(y)\n    }\n    this.getAllComments()\n  }\n  user: User = new User()\n\n  logout(){\n    this.router.navigate([\"\"]);\n  }\n\n  comments: Comment[]=[]\n\n  getAllComments(){\n    this.commentService.getAll().subscribe(\n      data=>{\n        if(data){\n          this.comments=data\n        }\n      }\n    )\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAGhD,SAASC,IAAI,QAAQ,gBAAgB;AAQ9B,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAQlE,KAAAC,IAAI,GAAS,IAAIL,IAAI,EAAE;IAMvB,KAAAM,QAAQ,GAAY,EAAE;EAdsD;EAC5EC,QAAQA,CAAA;IACN,IAAIC,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACpC,IAAGF,CAAC,EAAC;MACH,IAAI,CAACH,IAAI,GAACM,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;;IAEzB,IAAI,CAACK,cAAc,EAAE;EACvB;EAGAC,MAAMA,CAAA;IACJ,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAIAF,cAAcA,CAAA;IACZ,IAAI,CAACV,cAAc,CAACa,MAAM,EAAE,CAACC,SAAS,CACpCC,IAAI,IAAE;MACJ,IAAGA,IAAI,EAAC;QACN,IAAI,CAACZ,QAAQ,GAACY,IAAI;;IAEtB,CAAC,CACF;EACH;CACD;AA1BYjB,eAAe,GAAAkB,UAAA,EAL3BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWrB,eAAe,CA0B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}