{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProposalsService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  addProposal(p) {\n    return this.http.post(`${this.backendUrl}/proposal/add`, p);\n  }\n  getProposals() {\n    return this.http.get(`${this.backendUrl}/proposal/all`);\n  }\n  getVotes(u) {\n    return this.http.post(`${this.backendUrl}/proposal/votes`, u);\n  }\n  vote(idp, visitor) {\n    let data = {\n      \"idP\": idp,\n      \"visitor\": user\n    };\n    return this.http.post(`${this.backendUrl}/proposal/votes`, data);\n  }\n  static #_ = this.ɵfac = function ProposalsService_Factory(t) {\n    return new (t || ProposalsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProposalsService,\n    factory: ProposalsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProposalsService","constructor","http","backendUrl","addProposal","p","post","getProposals","get","getVotes","u","vote","idp","visitor","data","user","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\2020-2\\frontend\\src\\app\\services\\proposals.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Proposal } from '../models/proposal';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalsService {\n\n  constructor(private http: HttpClient) { }\n\n  backendUrl = \"http://localhost:8080\"\n\n  addProposal(p:Proposal){\n    return this.http.post<number>(`${this.backendUrl}/proposal/add`, p);\n  }\n\n  getProposals(){\n    return this.http.get<Proposal[]>(`${this.backendUrl}/proposal/all`);\n  }\n\n  getVotes(u: User){\n    return this.http.post<number[]>(`${this.backendUrl}/proposal/votes`, u);\n  }\n\n  vote(idp: number, visitor: User){\n    let data = {\n      \"idP\":idp,\n      \"visitor\": user\n    }\n    return this.http.post<number>(`${this.backendUrl}/proposal/votes`, data);\n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,UAAU,GAAG,uBAAuB;EAFI;EAIxCC,WAAWA,CAACC,CAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,GAAG,IAAI,CAACH,UAAU,eAAe,EAAEE,CAAC,CAAC;EACrE;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,UAAU,eAAe,CAAC;EACrE;EAEAM,QAAQA,CAACC,CAAO;IACd,OAAO,IAAI,CAACR,IAAI,CAACI,IAAI,CAAW,GAAG,IAAI,CAACH,UAAU,iBAAiB,EAAEO,CAAC,CAAC;EACzE;EAEAC,IAAIA,CAACC,GAAW,EAAEC,OAAa;IAC7B,IAAIC,IAAI,GAAG;MACT,KAAK,EAACF,GAAG;MACT,SAAS,EAAEG;KACZ;IACD,OAAO,IAAI,CAACb,IAAI,CAACI,IAAI,CAAS,GAAG,IAAI,CAACH,UAAU,iBAAiB,EAAEW,IAAI,CAAC;EAC1E;EAAC,QAAAE,CAAA,G;qBAxBUhB,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBrB,gBAAgB;IAAAsB,OAAA,EAAhBtB,gBAAgB,CAAAuB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}