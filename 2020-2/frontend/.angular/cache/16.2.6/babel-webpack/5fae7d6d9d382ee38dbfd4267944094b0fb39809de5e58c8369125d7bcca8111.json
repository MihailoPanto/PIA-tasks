{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProposalsService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  addProposal(p) {\n    return this.http.post(`${this.backendUrl}/proposal/add`, p);\n  }\n  getProposals() {\n    return this.http.get(`${this.backendUrl}/proposal/all`);\n  }\n  static #_ = this.ɵfac = function ProposalsService_Factory(t) {\n    return new (t || ProposalsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProposalsService,\n    factory: ProposalsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProposalsService","constructor","http","backendUrl","addProposal","p","post","getProposals","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Korisnik\\Desktop\\github\\PIA-tasks\\2020-2\\frontend\\src\\app\\services\\proposals.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Proposal } from '../models/proposal';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalsService {\n\n  constructor(private http: HttpClient) { }\n\n  backendUrl = \"http://localhost:8080\"\n\n  addProposal(p:Proposal){\n    return this.http.post<number>(`${this.backendUrl}/proposal/add`, p);\n  }\n\n  getProposals(){\n    return this.http.get<Proposal[]>(`${this.backendUrl}/proposal/all`);\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,UAAU,GAAG,uBAAuB;EAFI;EAIxCC,WAAWA,CAACC,CAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,GAAG,IAAI,CAACH,UAAU,eAAe,EAAEE,CAAC,CAAC;EACrE;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,UAAU,eAAe,CAAC;EACrE;EAAC,QAAAM,CAAA,G;qBAZUT,gBAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBd,gBAAgB;IAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}